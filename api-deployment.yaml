apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-tryout-2020-api-deployment-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-tryout-2020-frontend
  template:
    metadata:
      labels:
        app: k8s-tryout-2020-frontend
    spec:
      containers:
        - name: api-container
          image: ggerritsen1/k8s-tryout-2020_api:latest
          env:
          - name: CUSTOMERSVC_HOSTPORT
            value: "customersvc:8081"
          - name: GREETSVC_HOSTPORT
            value: "greetsvc:8082"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-tryout-2020-api-deployment-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: k8s-tryout-2020-backend
  template:
    metadata:
      labels:
        app: k8s-tryout-2020-backend
    spec:
      containers:
        - name: customersvc-container
          image: ggerritsen1/k8s-tryout-2020_customersvc:latest
        - name: greetsvc-container
          image: ggerritsen1/k8s-tryout-2020_greetsvc:latest
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  ports:
    - name: http
      targetPort: 8080
      port: 8080
  selector:
    app: k8s-tryout-2020-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: customersvc
spec:
  ports:
    - name: http
      targetPort: 8081
      port: 8081
  selector:
    app: k8s-tryout-2020-backend
---
apiVersion: v1
kind: Service
metadata:
  name: greetsvc
spec:
  ports:
    - name: http
      targetPort: 8082
      port: 8082
  selector:
    app: k8s-tryout-2020-backend
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: k8s-tryout-2020-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
    - host: api.localhost
      http:
        paths:
          - path: /
            backend:
              serviceName: api
              servicePort: http
